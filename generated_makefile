
CC = x86_64-w64-mingw32-gcc
ALL_FLAGS = -Wall -Wextra -Wpedantic -Werror -O3 -lm -lpthread -L"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.1/lib/x64" -I"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.1/include" -lOpenCL C:/Windows/System32/OpenCL.dll
COMPILER_FLAGS = -Wall -Wextra -Wpedantic -Werror -O3

all: objects programs

objects:
	@echo ""
	@echo "Compiling the source files..."
	@echo "|"
	$(CC) -c "src/utils.c" -o "obj/utils.o" $(COMPILER_FLAGS) 
	$(CC) -c "src/vectors.c" -o "obj/vectors.o" $(COMPILER_FLAGS) 
	$(CC) -c "src/gpu/gpu_utils.c" -o "obj/gpu/gpu_utils.o" $(COMPILER_FLAGS) 
	@echo ""
	@echo ""
	@echo ""
	@echo "Compiling the programs..."
	@echo "- gpu_program_test.exe..."
	@$(CC) -o "bin/gpu_program_test.exe" "programs/gpu_program_test.c" "obj/utils.o" "obj/vectors.o" "obj/gpu/gpu_utils.o" $(ALL_FLAGS)
	@echo "- print_all_info.exe..."
	@$(CC) -o "bin/print_all_info.exe" "programs/print_all_info.c" "obj/utils.o" "obj/vectors.o" "obj/gpu/gpu_utils.o" $(ALL_FLAGS)
	@echo "- testing_pow_gpu.exe..."
	@$(CC) -o "bin/testing_pow_gpu.exe" "programs/testing_pow_gpu.c" "obj/utils.o" "obj/vectors.o" "obj/gpu/gpu_utils.o" $(ALL_FLAGS)
	@echo "Compilation done"
	@echo ""

clean:
	@echo "Cleaning the project..."
	@$(foreach file, $(shell powershell -Command 'Get-ChildItem -Path obj -Filter *.o -Recurse | ForEach-Object {Resolve-Path (Join-Path $$_.DirectoryName $$_.Name) -Relative} | ForEach-Object { $$_.Replace("\", "/") } '), rm -f $(file);)
	@$(foreach file, $(shell powershell -Command 'Get-ChildItem -Path bin -Filter *.exe -Recurse | ForEach-Object {Resolve-Path (Join-Path $$_.DirectoryName $$_.Name) -Relative} | ForEach-Object { $$_.Replace("\", "/") } '), rm -f $(file);)
	@echo "Clean done"

